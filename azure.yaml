# yaml-language-server: $schema=https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json

name: gbb-ai-hls-factory-prior-auth
metadata:
    template: priorAuth-aca@1.11.0
services:
    streamlit:
        project: app/streamlit
        host: containerapp
        language: python
        docker:
          path: ../../Dockerfile
          context: ../../
          remoteBuild: true

pipeline:
  provider: github
hooks:
  postdeploy:
    posix:
      shell: sh
      interactive: true
      continueOnError: false
      run: |
        echo "Logging into Azure Container Registry..."
        az acr login --name $(azd env get-value AZURE_CONTAINER_REGISTRY_ENDPOINT)
        job_name=$(azd env get-value CONTAINER_APP_NAME)-job
        rg_name=$(azd env get-value RESOURCE_GROUP_NAME)

        echo "Updating container app job image..."
        az containerapp job update \
            -g $rg_name \
            --name $job_name \
            --image $(azd env get-value SERVICE_STREAMLIT_IMAGE_NAME)

        if [ -n "$(azd env get-value APP_UAI_RESOURCE_ID)" ]; then
          echo "Assigning user assigned identity to container app job..."
          az containerapp job identity assign -n $job_name \
            -g $rg_name \
            --user-assigned $(azd env get-value APP_UAI_RESOURCE_ID)
        fi


        echo "Stopping running jobs..."
        az containerapp job stop \
            -g $rg_name \
            --name $job_name

        echo "Starting the job to initialize the Search Index..."
        az containerapp job start \
            -g $rg_name \
            --name $job_name \
            --image $(azd env get-value SERVICE_STREAMLIT_IMAGE_NAME) \
            --command "/bin/bash" \
            --args "-c, python /app/src/pipeline/indexerSetup.py --target '/app'" \
            --registry-identity $(azd env get-value APP_IDENTITY_RESOURCE_ID)

        echo "Job started successfully."
  #     shell: pwsh
  #     interactive: true
  #     continueOnError: false
  #     run: |
  #       azd env refresh
  #       az acr login --name $(azd env get-value AZURE_CONTAINER_REGISTRY_ENDPOINT)
  #         env_vars=$(azd env get-values | tr '\n' ' ' | sed 's/ / /g' | sed 's/ $//')
  #         env_vars="$env_vars AZURE_CLIENT_ID=$(azd env get-value SCRIPT_UAI_CLIENT_ID)"

  #       if (!(az containerapp job show -g $(azd env get-value RESOURCE_GROUP_NAME) --name 'search-index-initialization' > $null 2>&1)) {
  #         az containerapp job create `
  #           -g $(azd env get-value RESOURCE_GROUP_NAME) `
  #           --environment $(azd env get-value AZURE_CONTAINER_ENVIRONMENT_ID) `
  #           --name 'search-index-initialization' `
  #           --image $(azd env get-value SERVICE_STREAMLIT_IMAGE_NAME) `
  #           --command "/bin/bash, -c, python /app/src/pipeline/indexerSetup.py --target '/app'" `
  #           --cpu 2.0 `
  #           --memory 4Gi `
  #           --trigger-type Manual `
  #           --env-vars $(echo $env_vars) `
  #           --registry-identity $(azd env get-value SCRIPT_UAI_RESOURCE_ID) `
  #           --registry-server $(azd env get-value AZURE_CONTAINER_REGISTRY_ENDPOINT)
  #       } else {
  #         az containerapp job update `
  #             -g $(azd env get-value RESOURCE_GROUP_NAME) `
  #             --name 'search-index-initialization' `
  #             --set-env-vars $(echo $env_vars)
  #       }
  #       az containerapp job stop `
  #         -g $(azd env get-value RESOURCE_GROUP_NAME) `
  #         --name 'search-index-initialization'
  #       az containerapp job start `
  #           -g $(azd env get-value RESOURCE_GROUP_NAME) `
  #           --name 'search-index-initialization' `
  #           --image $(azd env get-value SERVICE_STREAMLIT_IMAGE_NAME) `
  #           --command "/bin/bash, -c, python /app/src/pipeline/indexerSetup.py --target '/app'" `
  #           --registry-identity $(azd env get-value SCRIPT_UAI_RESOURCE_ID) 29b19fe4-1954-46a9-8e9b-175
  postprovision:
    posix:
      shell: sh
      interactive: true
      continueOnError: false
      run: |
        echo "
        AZURE_OPENAI_ENDPOINT=$(azd env get-value AZURE_OPENAI_ENDPOINT)
        AZURE_OPENAI_API_VERSION=$(azd env get-value AZURE_OPENAI_API_VERSION)
        AZURE_OPENAI_EMBEDDING_DEPLOYMENT=$(azd env get-value AZURE_OPENAI_EMBEDDING_DEPLOYMENT)
        AZURE_OPENAI_KEY=$(azd env get-value AZURE_OPENAI_KEY)
        AZURE_OPENAI_CHAT_DEPLOYMENT_ID=$(azd env get-value AZURE_OPENAI_CHAT_DEPLOYMENT_ID)
        AZURE_OPENAI_EMBEDDING_DIMENSIONS=$(azd env get-value AZURE_OPENAI_EMBEDDING_DIMENSIONS)
        AZURE_SEARCH_SERVICE_NAME=$(azd env get-value AZURE_SEARCH_SERVICE_NAME)
        AZURE_SEARCH_INDEX_NAME=$(azd env get-value AZURE_SEARCH_INDEX_NAME)
        AZURE_AI_SEARCH_SERVICE_ENDPOINT=$(azd env get-value AZURE_AI_SEARCH_SERVICE_ENDPOINT)
        AZURE_AI_SEARCH_ADMIN_KEY=$(azd env get-value AZURE_AI_SEARCH_ADMIN_KEY)
        AZURE_BLOB_CONTAINER_NAME=$(azd env get-value AZURE_BLOB_CONTAINER_NAME)
        AZURE_STORAGE_ACCOUNT_NAME=$(azd env get-value AZURE_STORAGE_ACCOUNT_NAME)
        AZURE_STORAGE_ACCOUNT_KEY=$(azd env get-value AZURE_STORAGE_ACCOUNT_KEY)
        AZURE_AI_SERVICES_KEY=$(azd env get-value AZURE_AI_SERVICES_KEY)
        AZURE_STORAGE_CONNECTION_STRING=$(azd env get-value AZURE_STORAGE_CONNECTION_STRING)
        AZURE_COSMOS_DB_DATABASE_NAME=$(azd env get-value AZURE_COSMOS_DB_DATABASE_NAME)
        AZURE_COSMOS_DB_COLLECTION_NAME=$(azd env get-value AZURE_COSMOS_DB_COLLECTION_NAME)
        AZURE_COSMOS_CONNECTION_STRING=$(azd env get-value AZURE_COSMOS_CONNECTION_STRING)
        AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT=$(azd env get-value AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT)
        AZURE_DOCUMENT_INTELLIGENCE_KEY=$(azd env get-value AZURE_DOCUMENT_INTELLIGENCE_KEY)
        APPLICATIONINSIGHTS_CONNECTION_STRING=$(azd env get-value APPLICATIONINSIGHTS_CONNECTION_STRING)
        AZURE_CONTAINER_REGISTRY_ENDPOINT=$(azd env get-value AZURE_CONTAINER_REGISTRY_ENDPOINT)
        " > .env

    windows:
      shell: pwsh
      interactive: true
      continueOnError: false
      run: |
        echo "
        AZURE_OPENAI_ENDPOINT=$(azd env get-value AZURE_OPENAI_ENDPOINT)
        AZURE_OPENAI_API_VERSION=$(azd env get-value AZURE_OPENAI_API_VERSION)
        AZURE_OPENAI_EMBEDDING_DEPLOYMENT=$(azd env get-value AZURE_OPENAI_EMBEDDING_DEPLOYMENT)
        AZURE_OPENAI_CHAT_DEPLOYMENT_ID=$(azd env get-value AZURE_OPENAI_CHAT_DEPLOYMENT_ID)
        AZURE_OPENAI_EMBEDDING_DIMENSIONS=$(azd env get-value AZURE_OPENAI_EMBEDDING_DIMENSIONS)
        AZURE_SEARCH_SERVICE_NAME=$(azd env get-value AZURE_SEARCH_SERVICE_NAME)
        AZURE_SEARCH_INDEX_NAME=$(azd env get-value AZURE_SEARCH_INDEX_NAME)
        AZURE_AI_SEARCH_SERVICE_ENDPOINT=$(azd env get-value AZURE_AI_SEARCH_SERVICE_ENDPOINT)
        AZURE_AI_SEARCH_ADMIN_KEY=$(azd env get-value AZURE_AI_SEARCH_ADMIN_KEY)
        AZURE_BLOB_CONTAINER_NAME=$(azd env get-value AZURE_BLOB_CONTAINER_NAME)
        AZURE_STORAGE_ACCOUNT_NAME=$(azd env get-value AZURE_STORAGE_ACCOUNT_NAME)
        AZURE_STORAGE_ACCOUNT_KEY=$(azd env get-value AZURE_STORAGE_ACCOUNT_KEY)
        AZURE_AI_SERVICES_KEY=$(azd env get-value AZURE_AI_SERVICES_KEY)
        AZURE_STORAGE_CONNECTION_STRING=$(azd env get-value AZURE_STORAGE_CONNECTION_STRING)
        AZURE_COSMOS_DB_DATABASE_NAME=$(azd env get-value AZURE_COSMOS_DB_DATABASE_NAME)
        AZURE_COSMOS_DB_COLLECTION_NAME=$(azd env get-value AZURE_COSMOS_DB_COLLECTION_NAME)
        AZURE_COSMOS_CONNECTION_STRING=$(azd env get-value AZURE_COSMOS_CONNECTION_STRING)
        AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT=$(azd env get-value AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT)
        AZURE_DOCUMENT_INTELLIGENCE_KEY=$(azd env get-value AZURE_DOCUMENT_INTELLIGENCE_KEY)
        APPLICATIONINSIGHTS_CONNECTION_STRING=$(azd env get-value APPLICATIONINSIGHTS_CONNECTION_STRING)
        AZURE_CONTAINER_REGISTRY_ENDPOINT=$(azd env get-value AZURE_CONTAINER_REGISTRY_ENDPOINT)
        " > .env
